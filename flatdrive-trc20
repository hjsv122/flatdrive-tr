my-app/
โ
โโโ .gitignore
node_modules/
.env

โโโ package.json
{
"name": "flatdrive-trc20",
"version": "1.0.0",
"private": true,
"scripts": {
"start": "node server.js"
},
"dependencies": {
"cors": "^2.8.5",
"dotenv": "^16.4.5",
"express": "^4.19.2",
"tronweb": "^5.3.0"
}
}

โโโ .env.example
PRIVATE_KEY=
USDT_CONTRACT=TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj
TRON_FULL_NODE=https://api.trongrid.io
WITHDRAW_FEE_TRX=5
PORT=8080

โโโ server.js
const express = require('express');
const cors = require('cors');
const TronWeb = require('tronweb');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(express.json());
app.use(express.static('frontend'));

const FULL_NODE = process.env.TRON_FULL_NODE || 'https://api.trongrid.io';
const PRIVATE_KEY = (process.env.PRIVATE_KEY || '').trim();
const USDT_CONTRACT = process.env.USDT_CONTRACT || 'TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj';
const WITHDRAW_FEE_TRX = Number(process.env.WITHDRAW_FEE_TRX || 5);

const tronWeb = new TronWeb({ fullHost: FULL_NODE, privateKey: PRIVATE_KEY || undefined });
let serverFeePoolTRX = 0;

async function getServerAddress() {
try {
if (!PRIVATE_KEY) return null;
const hex = tronWeb.address.fromPrivateKey(PRIVATE_KEY);
const base58 = tronWeb.address.fromHex(hex);
return base58;
} catch {
return null;
}
}

function toUsdtUnit(amount) {
return BigInt(Math.round(Number(amount) * 1e6));
}

app.get('/api/health', async (req, res) => {
res.json({ ok: true, serverAddress: await getServerAddress(), feePoolTRX: serverFeePoolTRX });
});

app.post('/api/fund-fee-pool', (req, res) => {
const amt = Number((req.body || {}).amountTRX);
if (!amt || amt <= 0) return res.status(400).json({ ok: false, error: 'amountTRX ูุทููุจ > 0' });
serverFeePoolTRX += amt;
return res.json({ ok: true, feePoolTRX: serverFeePoolTRX });
});

app.get('/api/fee-pool', (req, res) => {
res.json({ ok: true, feePoolTRX: serverFeePoolTRX });
});

app.post('/api/withdraw', async (req, res) => {
try {
const { to, amountUSDT } = req.body || {};
if (!to || typeof to !== 'string' || !to.startsWith('T')) return res.status(400).json({ ok: false, error: 'ุงูุนููุงู ุบูุฑ ุตุงูุญ' });
const amt = Number(amountUSDT);
if (!amt || amt <= 0) return res.status(400).json({ ok: false, error: 'ุงููุจูุบ ุบูุฑ ุตุงูุญ' });

if (serverFeePoolTRX < WITHDRAW_FEE_TRX) return res.status(400).json({ ok: false, error: 'ูุญูุธุฉ ุงูุฎุงุฏู ูุง ุชุญุชูู ุนูู ุฑุณูู ูุงููุฉ' });  
if (!PRIVATE_KEY) return res.status(500).json({ ok: false, error: 'ุงูููุชุงุญ ุงูุฎุงุต ุบูุฑ ููููุฃ ูู ุงูุฎุงุฏู' });  

const contract = await tronWeb.contract().at(USDT_CONTRACT);  
const txId = await contract.transfer(to, toUsdtUnit(amt)).send({ feeLimit: 15_000_000 });  

serverFeePoolTRX -= WITHDRAW_FEE_TRX;  

return res.json({ ok: true, txId, feePoolTRX: serverFeePoolTRX });

} catch (e) {
return res.status(500).json({ ok: false, error: e?.message || String(e) });
}
});

app.post('/api/sync-counters', (req, res) => res.json({ ok: true }));

const PORT = Number(process.env.PORT || 8080);
app.listen(PORT, () => {
console.log(FlatDrive TRC20 server listening on port ${PORT});
});

โโโ README.md

FlatDrive TRC20 โ ุชุดุบูู ูุฑูุน

ุชุดุบูู ูุญูููุง

1. ุฃูุดุฆ ููู .env ูู .env.example ูุถุน ููู:
PRIVATE_KEY=ุถุน_ููุชุงุญ_ูุญูุธุฉ_ุงูุฎุงุฏู
USDT_CONTRACT=TXLAQ63Xg1NAzckPwKHvzw7CSEmLMEqcdj
TRON_FULL_NODE=https://api.trongrid.io
WITHDRAW_FEE_TRX=5
PORT=8080


2. ุซุจูุช ุงูุญุฒู ูุดุบูู:
npm install
npm start


3. ุงูุชุญ: http://localhost:8080



ูุดุฑ ุนูู Render

New โ Web Service โ ุงุฑุจุท ุงููุณุชูุฏุน ุงูุฐู ูุญุชูู ูุฐุง ุงููุฌูุฏ my-app.

Environment Variables:

PRIVATE_KEY

USDT_CONTRACT

TRON_FULL_NODE

WITHDRAW_FEE_TRX

PORT


Build Command: npm install

Start Command: npm start


> ููุงุญุธุฉ: ุฅุฑุณุงู TRC20 ุนูู ุงูุดุจูุฉ ูุชุทูุจ ุฃู ุชุญุชูู ูุญูุธุฉ ุงูุฎุงุฏู ุนูู TRX ูุงูู ูุฑุณูู ุงูุดุจูุฉ.



โโโ frontend/
โโโ index.html
<!doctype html>

<html lang="ar">    
<head>    
  <meta charset="utf-8">    
  <meta name="viewport" content="width=device-width, initial-scale=1">    
  <title>FlatDrive โ TRC20</title>    
  <link rel="stylesheet" href="styles.css">    
</head>    
<body>    
<div class="game-container">          
  <h1>๐ FlatDrive โ ุงููุณุฎุฉ ุงูููุงุฆูุฉ TRC20</h1>          
  <div class="info">          
    <div>TRX ุงูููุชุณุจ: <strong id="trxEarned">0</strong></div>          
    <div>ุงููุณุงูุฉ ุงูููุทูุนุฉ: <span id="distance">0</span> ูุชุฑ</div>          
    <div>ุฑุตูุฏ ุฏุงุฎูู (USDT): <span id="wallet">0.00</span></div>          
    <div>ุชูููู ุงููุนุจุฉ (USDT): <span id="gameFund">0.00</span></div>          
    <div>ูุญูุธุฉ ุงูุฎุงุฏู (TRX): <span id="serverWallet">0.00</span></div>          
    <div>ุงูุญุงูุฉ: <span id="status">ูุชูููุฉ</span></div>          
  </div>      
  <canvas id="gameCanvas"></canvas>      
  <div class="controls">          
    <select id="carColor">          
      <option value="#ff6b6b">ุฃุญูุฑ</option>          
      <option value="#4ade80">ุฃุฎุถุฑ</option>          
      <option value="#3b82f6">ุฃุฒุฑู</option>          
      <option value="#facc15">ุฃุตูุฑ</option>          
    </select>          
    <button id="startBtn">ุงุจุฏุฃ ุงูููุงุฏุฉ</button>          
    <button id="stopBtn">ุชููู</button>          
    <button id="collectBtn">ุงุฌูุน (ุชุญููู)</button>          
    <button id="convertFund">ุชุญููู ุชูููู ุงููุนุจุฉ</button>          
  </div>        
  <div class="fund-panel">          
    <h2>ุชูููู ูุญูุธุฉ ุงูุฎุงุฏู</h2>          
    <input id="fundAmount" type="number" min="0" placeholder="ูู TRX ุชุฑูุฏ ุฅุฑุณุงูุ">          
    <button id="fundServerBtn">ุฅูุฏุงุน</button>          
  </div>        
  <div class="withdraw-panel">          
    <h2>ุทูุจ ุณุญุจ</h2>          
    <input id="toAddress" placeholder="ุนููุงู TRX ูุจุฏุฃ ุจู T..." />          
    <input id="amount" type="number" placeholder="ุงููุจูุบ USDT" />          
    <button id="reqWithdraw">ุงุทูุจ ุณุญุจ</button>          
  </div>          
</div>    
<script src="app.js"></script>    
</body>    
</html>  โโโ styles.css

body {
font-family: Arial, sans-serif;
background: #0f172a;
color: #e6eef8;
padding: 20px;
display: flex;
justify-content: center;
}

.game-container {
width: 760px;
background: #0b1220;
padding: 18px;
border-radius: 10px;
box-shadow: 0 6px 24px rgba(2, 6, 23, 0.6);
}

h1 {
font-size: 20px;
margin-bottom: 10px;
}

.info {
display: flex;
flex-wrap: wrap;
justify-content: space-between;
background: #071026;
padding: 10px;
border-radius: 8px;
margin-bottom: 10px;
}

canvas {
width: 100%;
height: 140px;
background: #02111b;
border-radius: 8px;
display: block;
margin: 12px 0;
}

.controls,
.fund-panel,
.withdraw-panel {
margin-bottom: 16px;
}

button {
background: #0ea5a6;
color: #041014;
border: none;
padding: 8px 12px;
border-radius: 8px;
cursor: pointer;
margin: 4px 0;
}

input,
select {
width: 100%;
padding: 8px;
border-radius: 6px;
border: 1px solid rgba(255, 255, 255, 0.06);
background: #02121a;
color: white;
margin-top: 6px;
}

โโโ app.js

document.addEventListener("DOMContentLoaded", () => {
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');
canvas.width = 720;
canvas.height = 140;

let running = false;
let trxEarned = 0;
let wallet = 0;
let gameFund = 0;
let distance = 0;
let serverWallet = 0;

let carX = 10;
let carColor = '#ff6b6b';

const updateUI = () => {
document.getElementById('trxEarned').textContent = Math.floor(trxEarned);
document.getElementById('wallet').textContent = wallet.toFixed(2);
document.getElementById('gameFund').textContent = gameFund.toFixed(2);
document.getElementById('distance').textContent = distance;
document.getElementById('serverWallet').textContent = serverWallet.toFixed(2);
};

const draw = () => {
ctx.clearRect(0, 0, canvas.width, canvas.height);
ctx.fillStyle = '#08323a';
ctx.fillRect(0, canvas.height - 20, canvas.width, 20);
ctx.fillStyle = carColor;
ctx.fillRect(carX, canvas.height - 44, 60, 28);
ctx.fillStyle = '#061119';
ctx.beginPath();
ctx.arc(carX + 12, canvas.height - 12, 8, 0, Math.PI * 2);
ctx.fill();
ctx.beginPath();
ctx.arc(carX + 48, canvas.height - 12, 8, 0, Math.PI * 2);
ctx.fill();
};

const gameTick = () => {
if (!running) return;
carX += 10;
if (carX > canvas.width) carX = -80;
distance += 10;
if (Math.random() < 0.7) trxEarned += 1;
updateUI();
draw();
requestAnimationFrame(gameTick);
};

document.getElementById('carColor').onchange = e => {
carColor = e.target.value;
};

document.getElementById('startBtn').onclick = () => {
running = true;
document.getElementById('status').textContent = 'ุชุนูู';
gameTick();
};

document.getElementById('stopBtn').onclick = () => {
running = false;
document.getElementById('status').textContent = 'ูุชูููุฉ';
};

document.getElementById('collectBtn').onclick = () => {
if (trxEarned < 1) {
alert("ูุง ุชูุฌุฏ ุฃุฑุจุงุญ ูุฌูุนูุง.");
return;
}
const rate = 0.1;
const totalUSDT = trxEarned * rate;
const fee = totalUSDT * 0.03;
const netUSDT = totalUSDT - fee;

gameFund += fee;
wallet += netUSDT;
trxEarned = 0;
updateUI();
alert(ุชู ุชุญููู ${netUSDT.toFixed(2)} USDT ุฅูู ูุญูุธุชู ุงูุฏุงุฎููุฉ (ุฎุตู 3% ุชูููู).);
};

document.getElementById('convertFund').onclick = () => {
if (gameFund <= 0) {
alert("ูุง ููุฌุฏ ุฑุตูุฏ ูู ูุญูุธุฉ ุงูุชูููู.");
return;
}
wallet += gameFund;
gameFund = 0;
updateUI();
alert("โ ุชู ุชุญููู ุชูููู ุงููุนุจุฉ ุฅูู ูุญูุธุชู ุงูุฏุงุฎููุฉ.");
};

document.getElementById('fundServerBtn').onclick = () => {
const amt = parseFloat(document.getElementById('fundAmount').value);
if (isNaN(amt) || amt <= 0 || amt > trxEarned) {
alert("ูุจูุบ ุบูุฑ ุตุญูุญ ุฃู ุฃูุจุฑ ูู ุฃุฑุจุงุญู.");
return;
}
trxEarned -= amt;
serverWallet += amt;
updateUI();
alert(โ ุชู ุชุญููู ${amt} TRX ุฅูู ูุญูุธุฉ ุงูุฎุงุฏู.);
};

document.getElementById('reqWithdraw').onclick = () => {
const to = document.getElementById('toAddress').value;
const amt = parseFloat(document.getElementById('amount').value);
const fee = 5;

if (!to.startsWith("T") || amt <= 0 || wallet < amt) {
alert("ุชุญูู ูู ุงูุนููุงู ุฃู ุงูุฑุตูุฏ.");
return;
}

if (serverWallet < fee) {
alert("ูุญูุธุฉ ุงูุฎุงุฏู ูุง ุชุญุชูู ุนูู ุฑุณูู ูุงููุฉ.");
return;
}

wallet -= amt;
serverWallet -= fee;
updateUI();
alert(โ ุชู ุชูุฏูู ุทูุจ ุณุญุจ ${amt} USDT ุฅูู ${to} ูุชู ุฎุตู ${fee} TRX ูู ูุญูุธุฉ ุงูุฎุงุฏู.);
};

updateUI();
draw();
});

