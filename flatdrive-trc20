FlatDrive-TRC20/
├─ public/
│   ├─ index.html
│   │   <!DOCTYPE html>
│   │   <html lang="ar">
│   │   <head>
│   │     <meta charset="UTF-8">
│   │     <meta name="viewport" content="width=device-width, initial-scale=1.0">
│   │     <title>🚗 FlatDrive — النسخة النهائية TRC20</title>
│   │     <link rel="stylesheet" href="style.css">
│   │   </head>
│   │   <body>
│   │     <div class="game-container">
│   │       <h1>🚗 FlatDrive — النسخة النهائية TRC20</h1>
│   │       <div class="info">
│   │         <div>TRX المكتسب: <strong id="trxEarned">0</strong></div>
│   │         <div>المسافة المقطوعة: <span id="distance">0</span> متر</div>
│   │         <div>رصيد داخلي (USDT): <span id="wallet">0.00</span></div>
│   │         <div>تمويل اللعبة (USDT): <span id="gameFund">0.00</span></div>
│   │         <div>محفظة الخادم (TRX): <span id="serverWallet">0.00</span></div>
│   │         <div>الحالة: <span id="status">متوقفة</span></div>
│   │       </div>
│   │       <canvas id="gameCanvas"></canvas>
│   │       <div class="controls">
│   │         <select id="carColor">
│   │           <option value="#ff6b6b">أحمر</option>
│   │           <option value="#4ade80">أخضر</option>
│   │           <option value="#3b82f6">أزرق</option>
│   │           <option value="#facc15">أصفر</option>
│   │         </select>
│   │         <button id="startBtn">ابدأ القيادة</button>
│   │         <button id="stopBtn">توقف</button>
│   │         <button id="collectBtn">اجمع (تحويل)</button>
│   │         <button id="convertFund">تحويل تمويل اللعبة</button>
│   │       </div>
│   │       <div class="fund-panel">
│   │         <h2>تمويل محفظة الخادم</h2>
│   │         <input id="fundAmount" type="number" min="0" placeholder="كم TRX تريد إرسال؟">
│   │         <button id="fundServerBtn">إيداع</button>
│   │       </div>
│   │       <div class="withdraw-panel">
│   │         <h2>طلب سحب</h2>
│   │         <input id="toAddress" placeholder="عنوان TRX يبدأ بـ T..." />
│   │         <input id="amount" type="number" placeholder="المبلغ USDT" />
│   │         <button id="reqWithdraw">اطلب سحب</button>
│   │       </div>
│   │     </div>
│   │     <script src="game.js"></script>
│   │   </body>
│   │   </html>
│   │
│   ├─ style.css
│   │   body {
│   │     font-family: Arial, sans-serif;
│   │     background: #0f172a;
│   │     color: #e6eef8;
│   │     padding: 20px;
│   │     display: flex;
│   │     justify-content: center;
│   │   }
│   │   .game-container { width: 760px; background: #0b1220; padding: 18px; border-radius: 10px; box-shadow: 0 6px 24px rgba(2,6,23,0.6); }
│   │   h1 { font-size: 20px; margin-bottom: 10px; }
│   │   .info { display: flex; flex-wrap: wrap; justify-content: space-between; background: #071026; padding: 10px; border-radius: 8px; margin-bottom: 10px; }
│   │   canvas { width: 100%; height: 140px; background: #02111b; border-radius: 8px; display: block; margin: 12px 0; }
│   │   .controls, .fund-panel, .withdraw-panel { margin-bottom: 16px; }
│   │   button { background: #0ea5a6; color: #041014; border: none; padding: 8px 12px; border-radius: 8px; cursor: pointer; margin: 4px 0; }
│   │   input, select { width: 100%; padding: 8px; border-radius: 6px; border: 1px solid rgba(255,255,255,0.06); background: #02121a; color: white; margin-top: 6px; }
│   │
│   └─ game.js
│       document.addEventListener("DOMContentLoaded", () => {
│         const canvas = document.getElementById('gameCanvas');
│         const ctx = canvas.getContext('2d');
│         canvas.width = 720; canvas.height = 140;
│         let running = false, trxEarned = 0, wallet = 0, gameFund = 0, distance = 0, serverWallet = 0;
│         let carX = 10, carColor = '#ff6b6b';
│         const updateUI = () => {
│           document.getElementById('trxEarned').textContent = Math.floor(trxEarned);
│           document.getElementById('wallet').textContent = wallet.toFixed(2);
│           document.getElementById('gameFund').textContent = gameFund.toFixed(2);
│           document.getElementById('distance').textContent = distance;
│           document.getElementById('serverWallet').textContent = serverWallet.toFixed(2);
│         };
│         const draw = () => {
│           ctx.clearRect(0,0,canvas.width,canvas.height);
│           ctx.fillStyle = '#08323a';
│           ctx.fillRect(0,canvas.height-20,canvas.width,20);
│           ctx.fillStyle = carColor;
│           ctx.fillRect(carX,canvas.height-44,60,28);
│           ctx.fillStyle = '#061119';
│           ctx.beginPath();
│           ctx.arc(carX+12,canvas.height-12,8,0,Math.PI*2);
│           ctx.fill();
│           ctx.beginPath();
│           ctx.arc(carX+48,canvas.height-12,8,0,Math.PI*2);
│           ctx.fill();
│         };
│         const gameTick = () => {
│           if(!running) return;
│           carX += 10; if(carX>canvas.width) carX=-80;
│           distance+=10;
│           if(Math.random()<0.7) trxEarned+=1;
│           updateUI(); draw();
│           requestAnimationFrame(gameTick);
│         };
│         document.getElementById('carColor').onchange = e=>{carColor=e.target.value;}
│         document.getElementById('startBtn').onclick=()=>{running=true; document.getElementById('status').textContent='تعمل'; gameTick();}
│         document.getElementById('stopBtn').onclick=()=>{running=false; document.getElementById('status').textContent='متوقفة';}
│         document.getElementById('collectBtn').onclick=async()=>{
│           if(trxEarned<1){alert("لا توجد أرباح لجمعها."); return;}
│           const res=await fetch('/api/collect',{method:'POST'});
│           const data=await res.json();
│           trxEarned=data.trxEarned; wallet=data.wallet; gameFund=data.gameFund; serverWallet=data.serverWallet;
│           alert(`تم تحويل ${data.netUSDT.toFixed(2)} USDT إلى محفظتك الداخلية (خصم 3% تمويل).`);
│           updateUI();
│         };
│         document.getElementById('convertFund').onclick=async()=>{
│           await fetch('/api/convertFund',{method:'POST'});
│           const res=await fetch('/api/collect',{method:'POST'});
│           const data=await res.json();
│           wallet=data.wallet; gameFund=data.gameFund;
│           updateUI();
│           alert("✅ تم تحويل تمويل اللعبة إلى محفظتك الداخلية.");
│         };
│         document.getElementById('fundServerBtn').onclick=async()=>{
│           const amt=parseFloat(document.getElementById('fundAmount').value);
│           const res=await fetch('/api/fund',{method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({amt})});
│           const data=await res.json();
│           if(data.error){alert(data.error); return;}
│           trxEarned=data.trxEarned; serverWallet=data.serverWallet; updateUI();
│           alert(`✅ تم تحويل ${amt} TRX إلى محفظة الخادم.`);
│         };
│         document.getElementById('reqWithdraw').onclick=async()=>{
│           const to=document.getElementById('toAddress').value;
│           const amt=parseFloat(document.getElementById('amount').value);
│           const res=await fetch('/api/withdraw',{method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({to, amt})});
│           const data=await res.json();
│           if(data.error){alert(data.error); return;}
│           wallet=data.wallet; serverWallet=data.serverWallet;
│           updateUI();
│           alert(`✅ تم تقديم طلب سحب ${amt} USDT إلى ${to} وتم خصم ${data.fee} TRX من محفظة الخادم.\nTXID: ${data.txId}`);
│         };
│         updateUI(); draw();
│       });
│
├─ server/
│   └─ server.js
│       const express=require('express');
│       const bodyParser=require('body-parser');
│       const cors=require('cors');
│       const TronWeb=require('tronweb');
│       require('dotenv').config();
│       const app=express();
│       app.use(cors()); app.use(bodyParser.json()); app.use(express.static('public'));
│       const PRIVATE_MNEMONIC=process.env.MNEMONIC;
│       const FULL_NODE='https://api.trongrid.io', SOLIDITY_NODE='https://api.trongrid.io', EVENT_SERVER='https://api.trongrid.io';
│       const tronWeb=new TronWeb(FULL_NODE,SOLIDITY_NODE,EVENT_SERVER,PRIVATE_MNEMONIC);
│       let gameState={trxEarned:0,wallet:0,gameFund:0,serverWallet:0};
│       app.post('/api/collect',(
